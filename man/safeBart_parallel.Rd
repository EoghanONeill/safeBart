% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/safeBart_parallel.R
\name{safeBart_parallel}
\alias{safeBart_parallel}
\title{Parallel Safe-Bayesian Random Forest}
\usage{
safeBart_parallel(seed, y, original_datamat, test_datamat, lambda = 0.45,
  num_models = 1000, num_trees = 5, beta_par = 1, ncores = 1,
  outsamppreds = 1, nu = 3, a = 3, sigquant = 0.9)
}
\arguments{
\item{seed}{The seed for random number generation.}

\item{y}{The training data vector of outcomes. This must be a vector of integers between 1 and num_cats.}

\item{original_datamat}{The original training data. Currently all variables must be continuous. The training data does not need to be transformed before being entered to this function.}

\item{lambda}{A real number between 0 and 1 that determines the splitting probability in the prior (which is used as the importance sampler of tree models). Quadrianto and Ghahramani (2015) recommend a value less than 0.5 .}

\item{num_trees}{The number of trees to be sampled.}

\item{beta_par}{The power to which the likelihood is to be raised. For BMA, set beta_par=1.}

\item{ncores}{The number of cores to be used in parallelization.}

\item{num_cats}{The number of possible values for the outcome variable.}

\item{alpha_parameters}{Vector of prior parameters.}

\item{original_datamat}{The original test data. This matrix must have the same number of columns (variables) as the training data. Currently all variables must be continuous. The test data does not need to be transformed before being entered to this function.}
}
\value{
A matrix of probabilities with the number of rows equl to the number of test observations and the number of columns equal to the number of possible outcome categories.
}
\description{
A parallelized implementation of the Safe-Bayesian Random Forest described by Quadrianto and Ghahramani (2015)
}
\examples{
beta_par <- 0.5

N <- 100
p<- 5
set.seed(100)

epsilon <- rnorm(N)

xcov <- matrix(runif(N*p), nrow=N)

y <- sin(pi*xcov[,1]*xcov[,2]) + 20*(xcov[,3]-0.5)^2+10*xcov[,4]+5*xcov[,5]+epsilon
# <- rep(1,N) + epsilon

epsilontest <- rnorm(N)

xcovtest <- matrix(runif(N*p), nrow=N)
ytest <- sin(pi*xcovtest[,1]*xcovtest[,2]) + 20*(xcovtest[,3]-0.5)^2+10*xcovtest[,4]+5*xcovtest[,5]+epsilontest
#ytest <- rep(1,N) + epsilontest




Num_split_vars <- 10

lambda <- 0.45
Num_models <- 10000
num_trees1 <- 5

seed1 <- 42
ncores <- 7



examplepreds1 <- safeBart_parallel(seed1,
                                   y, xcov,xcovtest,
                                   lambda=0.45,
                                   num_models=Num_models,
                                   num_trees=num_trees1,
                                   beta_par=beta_par,
                                   ncores=ncores,
                                   outsamppreds=1,
                                   nu=3,
                                   a=3,
                                   sigquant=0.9)

cbind(examplepreds1,ytest )
}
